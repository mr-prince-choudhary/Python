Method 1 : Linear Quest
Code:-
num1 = 36
num2 = 60
gcd = 1
for i in range(1, min(num1, num2)):
    if num1 % i == 0 and num2 % i == 0:
        gcd = i
print("GCD of", num1, "and", num2, "is", gcd)

Output:-
GCD of 36 and 60 is 12


Method 2 : Repeated Subtraction
Code:-
num1 = 36
num2 = 60
a = num1
b = num2
while num1 != num2:
    if num1 > num2:
        num1 -= num2
    else:
        num2 -= num1
print("GCD of", a, "and", b, "is", num1)

Output:-
GCD of 36 and 60 is 12


Method 3 : Repeated Subtraction using Recursion
Code:-
def findGCD(num1, num2):
    if num1 == 0 or num2 == 0:
        return num1 + num2
    if num1 == num2:
        return num1
    if num1 > num2:
        return findGCD(num1 - num2, num2)
    else:
        return findGCD(num1, num2 - num1)
num1 = 36
num2 = 60
print("GCD of", num1, "and", num2, "is", findGCD(num1, num2))

Output:-
GCD of 36 and 60 is 12


Method 4 : Repeated Subtraction with Modulo Operator using Recursion
Code:-
def getGCD(a, b):
    return b == 0 and a or getGCD(b, a % b)
num1 = 36
num2 = 60
print("GCD of", num1, "and", num2, "is", getGCD(num1, num2))

Output:-
GCD of 36 and 60 is 12


Method 5 : Handling Negative Numbers in GCD
Code:-
def getGCD(a, b):
    return b == 0 and a or getGCD(b, a % b)
num1 = -36
num2 = 60
num1 >= 0 and num1 or -num1
num2 >= 0 and num2 or -num2
print("GCD of", num1, "and", num2, "is", getGCD(num1, num2))

Output:-
GCD of -36 and 60 is 12
