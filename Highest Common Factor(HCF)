Method 1 : Linear Quest
Code:-
num1 = 36
num2 = 60
hcf = 1
for i in range(1, min(num1, num2)):
    if num1 % i == 0 and num2 % i == 0:
        hcf = i
print("Hcf of", num1, "and", num2, "is", hcf)

Output:-
HCF of 36 and 60 is 12


Method 2 : Repeated Subtraction
Code:-
num1 = 36
num2 = 60
a = num1
b = num2
while num1 != num2:
    if num1 > num2:
        num1 -= num2
    else:
        num2 -= num1
print("Hcf of", a, "and", b, "is", num1)

Output:-
HCF of 36 and 60 is 12


Method 3 : Repeated Subtraction using Recursion
Code:-
def findHCF(num1, num2):
    if num1 == 0 or num2 == 0:
        return num1 + num2
    if num1 == num2:
        return num1
    if num1 > num2:
        return findHCF(num1 - num2, num2)
    else:
        return findHCF(num1, num2 - num1)
num1 = 36
num2 = 60
print("Hcf of", num1, "and", num2, "is", findHCF(num1, num2))

Output:-
HCF of 36 and 60 is 12


Method 4 : Repeated Subtraction with Modulo Operator using Recursion
Code:-
def getHCF(a, b):
    return b == 0 and a or getHCF(b, a % b)
num1 = 36
num2 = 60
print("Hcf of", num1, "and", num2, "is", getHCF(num1, num2))

Output:-
HCF of 36 and 60 is 12


Method 5 : Handling Negative Numbers in HCF
Code:-
def getHCF(a, b):
    return b == 0 and a or getHCF(b, a % b)
num1 = -36
num2 = 60
num1 >= 0 and num1 or -num1
num2 >= 0 and num2 or -num2
print("Hcf of", num1, "and", num2, "is", getHCF(num1, num2))

Output:-
HCF of -36 and 60 is 12
